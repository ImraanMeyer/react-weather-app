{"version":3,"sources":["components/Header.js","components/Form.js","components/Weather.js","App.js","index.js"],"names":["Header","props","toggleNavbar","bind","state","collapsed","this","setState","Container","fluid","style","container","Navbar","color","light","NavbarBrand","href","className","NavbarToggler","onClick","Collapse","isOpen","navbar","Nav","NavItem","NavLink","Component","padding","marginBottom","propTypes","PropTypes","bool","Form","visible","onChange","onSubmit","getWeather","Alert","fade","toggle","onDismiss","alertStyles","Input","type","name","placeholder","Button","textTransform","zIndex","position","top","left","transform","defaultOptions","loop","autoplay","animationData","rendererSettings","preserveAspectRatio","Weather","temprature","city","country","humidity","description","error","loading","display","alignItems","justifyContent","options","height","width","API_KEY","App","undefined","cod","e","a","preventDefault","target","elements","value","fetch","then","data","json","message","main","temp","sys","weather","ref","wrapper","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.723d39f1.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport { Container, Collapse, Navbar, NavbarToggler, NavbarBrand, Nav, NavItem, NavLink } from 'reactstrap';\r\n\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default class Header extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.toggleNavbar = this.toggleNavbar.bind(this);\r\n        this.state = {\r\n            collapsed: true\r\n        };\r\n    }\r\n\r\n    toggleNavbar() {\r\n        this.setState({\r\n            collapsed: !this.state.collapsed\r\n        });\r\n    }\r\n    render() {\r\n        return (\r\n            <Container fluid={true} style={container}>\r\n                <Container fluid={false}>\r\n                    <Navbar color=\"faded\" light>\r\n                        <NavbarBrand href=\"#\" className=\"mr-auto\">SimpleWeather</NavbarBrand>\r\n                        <NavbarToggler onClick={this.toggleNavbar} className=\"mr-2\" />\r\n                        <Collapse isOpen={!this.state.collapsed} navbar>\r\n                            <Nav navbar>\r\n                                <NavItem>\r\n                                    <NavLink href=\"#\">Home</NavLink>\r\n                                </NavItem>\r\n                                <NavItem>\r\n                                    <NavLink href=\"#\">API</NavLink>\r\n                                </NavItem>\r\n                            </Nav>\r\n                        </Collapse>\r\n                    </Navbar>\r\n                </Container>\r\n            </Container>\r\n        )\r\n    }\r\n}\r\n\r\nconst container = {\r\n    padding: 0,\r\n    marginBottom: 60\r\n}\r\n\r\n\r\nContainer.propTypes = {\r\n    fluid: PropTypes.bool\r\n}","import React, { Component } from 'react'\r\nimport { Button, Input, Alert } from 'reactstrap';\r\n\r\nexport default class Form extends Component {\r\n    state = {\r\n        visible: false\r\n    }\r\n\r\n    // Dismiss alerts\r\n    onDismiss() {\r\n        this.setState({\r\n            visible: !this.state.visible\r\n        })\r\n    }\r\n\r\n    onChange = () => {\r\n        this.setState({\r\n            visible: true\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <form onSubmit={this.props.getWeather} className=\"form\">\r\n                <Alert color=\"info\" isOpen={this.state.visible} fade={true} toggle={this.onDismiss.bind(this)} style={alertStyles}>\r\n                    Select Country Code! (ZA, UK)\r\n                </Alert>\r\n\r\n                <Input type=\"text\" name=\"city\" placeholder=\"Type in your city...\" />\r\n                <Input type=\"text\" name=\"country\" placeholder=\"Type in your country...\" onClick={this.onChange} />\r\n                <Button color=\"light\" className=\"sbt-btn\">Get Weather</Button>\r\n            </form>\r\n        )\r\n    }\r\n}\r\n\r\nconst alertStyles = {\r\n    textTransform: 'capitalize',\r\n    zIndex: 99,\r\n    position: 'absolute',\r\n    top: '10%',\r\n    left: '50%',\r\n    transform: 'translate(-50%, 50%)'\r\n}","import React, { Component } from 'react';\r\nimport { Alert, Container } from 'reactstrap';\r\nimport FadeIn from \"react-fade-in\";\r\nimport Lottie from \"react-lottie\";\r\n\r\nimport * as lottie from '../helpers/weather.lottie.json'\r\n\r\n// Options for Lottie\r\nconst defaultOptions = {\r\n    loop: true,\r\n    autoplay: true,\r\n    animationData: lottie.default,\r\n    rendererSettings: {\r\n        preserveAspectRatio: \"xMidYMid slice\"\r\n    }\r\n}\r\nexport default class Weather extends Component {\r\n    state = {\r\n        visible: true\r\n    }\r\n\r\n    // Dismiss alerts\r\n    onDismiss() {\r\n        this.setState({\r\n            visible: !this.state.visible\r\n        })\r\n    }\r\n\r\n    render() {\r\n        // Deconstructing state \r\n        const { temprature, city, country, humidity, description, error, loading } = this.props;\r\n\r\n        return (\r\n            <Container className=\"output\">\r\n                {!loading ? (\r\n                    <div style={{ display: 'flex', alignItems: 'center', justifyContent: 'center' }}>\r\n                        {error && <Alert color=\"danger\" isOpen={this.state.visible} fade={true} toggle={this.onDismiss.bind(this)} style={alertStyles}>{error}</Alert>}\r\n                        <Lottie options={defaultOptions} height={400} width={400} />\r\n                    </div>\r\n                ) : (\r\n                        <FadeIn >\r\n                            <h3>{city}, {country}</h3>\r\n\r\n                            <div className=\"Faded\">\r\n                                <div>\r\n                                    <p>Temprature:</p>\r\n                                    <p>{temprature}C</p>\r\n                                </div>\r\n\r\n                                <div>\r\n                                    <p>Humidity:</p>\r\n                                    <p>{humidity}</p>\r\n                                </div>\r\n\r\n                                <div>\r\n                                    <p>Description: </p>\r\n                                    <p style={{ textTransform: 'capitalize' }}>{description}</p>\r\n                                </div>\r\n                            </div>\r\n                        </FadeIn>\r\n                    )}\r\n            </Container >\r\n        )\r\n    }\r\n}\r\n\r\nconst alertStyles = {\r\n    textTransform: 'capitalize',\r\n    zIndex: 99,\r\n    position: 'absolute',\r\n    top: '10%',\r\n    left: '50%',\r\n    transform: 'translate(-50%, 50%)'\r\n}","import React, { Component } from 'react';\r\nimport Header from './components/Header';\r\nimport Form from './components/Form';\r\nimport Weather from './components/Weather';\r\nimport { Container } from 'reactstrap';\r\n\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './App.css'\r\n\r\n// openweather API Key\r\nconst API_KEY = \"55124ea2024b8eac85c1c5b5dc82062e\";\r\n\r\nexport default class App extends Component {\r\n  state = {\r\n    temprature: undefined,\r\n    city: undefined,\r\n    country: undefined,\r\n    humidity: undefined,\r\n    description: undefined,\r\n    error: undefined,\r\n    cod: undefined,\r\n    loading: undefined\r\n  }\r\n\r\n  getWeather = async (e) => {\r\n    e.preventDefault();\r\n    const city = e.target.elements.city.value;\r\n    const country = e.target.elements.country.value;\r\n\r\n    const data = await fetch(`https://api.openweathermap.org/data/2.5/weather?q=${city},${country}&appid=${API_KEY}&units=metric`)\r\n      .then(data => data.json())\r\n\r\n    if (city && country) {\r\n      this.setState({\r\n        cod: data.cod\r\n      })\r\n      if (this.state.cod === \"404\") {\r\n        this.setState({\r\n          temprature: undefined,\r\n          city: undefined,\r\n          country: undefined,\r\n          humidity: undefined,\r\n          description: undefined,\r\n          error: data.message\r\n        })\r\n      } else {\r\n        this.setState({\r\n          temprature: data.main.temp,\r\n          city: data.name,\r\n          country: data.sys.country,\r\n          humidity: data.main.humidity,\r\n          description: data.weather[0].description,\r\n          error: undefined,\r\n          loading: true\r\n        })\r\n      }\r\n    } else {\r\n      this.setState({\r\n        temprature: undefined,\r\n        city: undefined,\r\n        country: undefined,\r\n        humidity: undefined,\r\n        description: undefined,\r\n        error: \"Please enter a city and country!\"\r\n      })\r\n    }\r\n  }\r\n\r\n  render() {\r\n    // Deconstructing state \r\n    const { temprature, city, country, humidity, description, error, loading } = this.state;\r\n\r\n    return (\r\n      <div>\r\n        <Header />\r\n        <Container style={{ display: 'flex' }}>\r\n          <Form getWeather={this.getWeather} />\r\n          <Weather ref={ref => (this.wrapper = ref)}\r\n            temprature={temprature}\r\n            city={city}\r\n            country={country}\r\n            humidity={humidity}\r\n            description={description}\r\n            error={error}\r\n            loading={loading}\r\n          />\r\n        </Container>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}